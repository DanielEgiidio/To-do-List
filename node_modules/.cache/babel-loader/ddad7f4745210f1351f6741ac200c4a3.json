{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work\\\\Desktop\\\\Temp-FronEnd\\\\TodoList\\\\todolist\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updatedTodos = todoId;\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quais s\\xE3o seus Planos para Hoje?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      update: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"9Y+WAEduA3T7/6rWKf36gQ51Brw=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Work/Desktop/Temp-FronEnd/TodoList/todolist/src/components/TodoList.js"],"names":["React","useState","Todo","TodoForm","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updatedTodos","todoId","removeTodo","id","removeArr","filter","completeTodo","map","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE3B,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAAyC;AACrC;AACH;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GARD;;AAUA,QAAMC,YAAY,GAAIC,MAAtB;;AAEA,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACrB,UAAMC,SAAS,GAAG,CAAC,GAAGX,KAAJ,EAAWY,MAAX,CAAkBT,IAAI,IAAIA,IAAI,CAACO,EAAL,KAAWA,EAArC,CAAlB;AAEAT,IAAAA,QAAQ,CAACU,SAAD,CAAR;AACH,GAJD;;AAOA,QAAME,YAAY,GAAGH,EAAE,IAAI;AACvB,QAAIH,YAAY,GAAGP,KAAK,CAACc,GAAN,CAAUX,IAAI,IAAI;AACjC,UAAIA,IAAI,CAACO,EAAL,KAAYA,EAAhB,EAAoB;AAChBP,QAAAA,IAAI,CAACY,UAAL,GAAkB,CAACZ,IAAI,CAACY,UAAxB;AACH;;AACD,aAAOZ,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACM,YAAD,CAAR;AACH,GARD;;AAUJ,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEL;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,KAAb;AAAoB,MAAA,YAAY,EAAEa,YAAlC;AAAgD,MAAA,UAAU,EAAEJ,UAA5D;AAAwE,MAAA,MAAM;AAA9E;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAxCuBV,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\nexport default function TodoList() {\r\n\r\n        const [ todos, setTodos ] = useState([]);\r\n\r\n        const addTodo = todo => {\r\n            if(!todo.text || /^\\s*$/.test(todo.text)){\r\n                return;\r\n            }\r\n            \r\n            const newTodos = [todo, ...todos];\r\n\r\n            setTodos(newTodos);\r\n        };\r\n\r\n        const updatedTodos = (todoId)\r\n\r\n        const removeTodo = id => {\r\n            const removeArr = [...todos].filter(todo => todo.id !==id);\r\n\r\n            setTodos(removeArr);\r\n        };\r\n\r\n\r\n        const completeTodo = id => {\r\n            let updatedTodos = todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.isComplete = !todo.isComplete\r\n                }\r\n                return todo\r\n            })\r\n            setTodos(updatedTodos);\r\n        }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quais s√£o seus Planos para Hoje?</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} update/>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}