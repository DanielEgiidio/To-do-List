{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work\\\\Desktop\\\\Temp-FronEnd\\\\TodoList\\\\todolist\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoFromList from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo({\n  todos,\n  completeTodo,\n  removeTodo\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Todo, \"6ZseiRb5kKJwrHL2sKNDN7vrZVI=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/Work/Desktop/Temp-FronEnd/TodoList/todolist/src/components/Todo.js"],"names":["React","useState","TodoFromList","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","edit","setEdit","id","value","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,YAAzB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAGA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAd,EAAiD;AAAA;;AAE5D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC7BU,IAAAA,EAAE,EAAC,IAD0B;AAE7BC,IAAAA,KAAK,EAAC;AAFuB,GAAD,CAAhC;AAOA,SAAON,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAK,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UAAxD;AAAA,4BAEI;AAAmB,MAAA,OAAO,EAAE,MAAMT,YAAY,CAACO,IAAI,CAACH,EAAN,CAA9C;AAAA,gBACKG,IAAI,CAACG;AADV,OAAUH,IAAI,CAACH,EAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI,QAAC,iBAAD;AAAmB,QAAA,OAAO,EAAE,MAAKH,UAAU,CAACM,IAAI,CAACH,EAAN,CAA3C;AAAsD,QAAA,SAAS,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAAEC,UAAAA,EAAE,EAACG,IAAI,CAACH,EAAV;AAAcC,UAAAA,KAAK,EAAEE,IAAI,CAACG;AAA1B,SAAD,CAA9B;AAAiE,QAAA,SAAS,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,KAAyEF,KAAzE;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAcH;;GAvBuBV,I;;KAAAA,I","sourcesContent":["import React, { useState } from 'react';\r\nimport TodoFromList from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\n\r\nexport default function Todo({todos, completeTodo, removeTodo}) {\r\n\r\n    const [edit, setEdit] = useState({\r\n        id:null,\r\n        value:''\r\n    })\r\n\r\n\r\n    \r\n    return todos.map((todo, index) =>(\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine onClick={()=> removeTodo(todo.id)} className='delete-icon'/>\r\n                <TiEdit onClick={() => setEdit({ id:todo.id, value: todo.text})} className='edit-icon'/>\r\n            </div>\r\n\r\n        </div>\r\n    ))\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}